pipeline{

    agent any
    
    
tools{
       maven "maven-3.6.2"
}
triggers {
  pollSCM '* * * * *'
  //this is for build periodically option
   //cron '* * * * *'
}
options {
  timestamps
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}
stages{
//get the code form github
    stage('CheckoutCode'){
       steps{
           slacknotification("STARTED")
            git branch: 'development', credentialsId: '7aac4c71-c5c4-448c-b6cb-8b12fb121ed5', url: 'https://github.com/j-vidya20/maven-web-application.git' 
    }//steps closing
}
//do the build
    stage('Build'){
         steps{
            sh "mvn clean package"
}
}
//execute the sonarQube report
     stage('ExecuteSonarQubeReport'){
    steps{
        sh "mvn sonar:sonar"
    }
}
//upload artifacts into nexus
    stage('UploadArtifactsintoNexus'){
        steps{
            sh "mvn deploy"
        }
    }
//deploying application into tomcat server
    stage('DeployApplicationintoTomcatServer'){
        steps{
            sshagent(['5040e2cf-f477-4319-89d2-b915156da4db']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@65.2.172.111:/opt/apache-tomcat-9.0.65/webapps/"
}
        }
    }
}//stages closing

post {
  success {
    slacknotification(currentBuild.result)
    
  }
  failure {
   slacknotification(currentBuild.result)
  }
}

}//pipleline closing



def slacknotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
